@* Цей файл використовується для відображення та керування зовнішніми логінами 
на сторінці управління обліковим записом користувача. *@

@*  Ця директива вказує, що цей файл є сторінкою *@
@page
@*  Визначаєм тип моделі, яка використовується на цій сторінці. *@
@model ExternalLoginsModel
@{
    // Ці значення використовуються для визначення заголовку та активної сторінки.
    ViewData["Title"] = "Manage your external logins";
    ViewData["ActivePage"] = ManageNavPages.ExternalLogins;
}
@* Вставляєм частковий вид для відображення повідомлень статусу. *@
<partial name="_StatusMessage" for="StatusMessage" />

@* Перевіряє, чи у моделі існують зареєстровані логіни (CurrentLogins), і чи їхня кількість більше нуля. 
Якщо умова виконується, виводиться блок коду для відображення зареєстрованих логінів. *@
@if (Model.CurrentLogins?.Count > 0)
{
    //Заголовок, який показує, що на сторінці буде відображено зареєстровані логіни.
    <h3>Registered Logins</h3>
    //Визначає HTML-таблицю для відображення інформації про логіни.
    <table class="table">
        <tbody>
            @* Цикл, який проходиться по кожному зареєстрованому логіну у колекції CurrentLogins в моделі. *@
            @foreach (var login in Model.CurrentLogins)
            {
                <tr>
                    @* Комірка таблиці, яка відображає ім'я або опис постачальника логіну. Атрибут id 
                    генерує унікальний ідентифікатор 
                    для цього елемента на основі постачальника логіну. *@
                    <td id="@($"login-provider-{login.LoginProvider}")">@login.ProviderDisplayName</td>
                    <td>
                        @* Перевірка, чи потрібно відображати кнопку для видалення логіну. 
                        Це визначається значенням ShowRemoveButton у моделі. *@
                        @if (Model.ShowRemoveButton)
                        {
                            @* Форма для видалення логіну. Ідентифікатор форми генерується на 
                            основі постачальника логіну. *@
                            <form id="@($"remove-login-{login.LoginProvider}")" asp-page-handler="RemoveLogin" method="post">
                                <div>
                                    @* Приховане поле для передачі ідентифікатора постачальника логіну 
                                    при видаленні. *@
                                    <input asp-for="@login.LoginProvider" name="LoginProvider" type="hidden" />
                                    @* Приховане поле для передачі ідентифікатора логіну при видаленні. *@
                                    <input asp-for="@login.ProviderKey" name="ProviderKey" type="hidden" />
                                    @* Кнопка для відправлення форми і видалення логіну. *@
                                    <button type="submit" class="btn btn-primary" title="Remove this @login.ProviderDisplayName login from your account">Remove</button>
                                </div>
                            </form>
                        }
                        else
                        {
                            @* HTML - код для вставки нерозривного пробіла(non-breaking space) в разі, 
                            якщо кнопка видалення не відображається. 
                            Це використовується для вирівнювання тексту в таблиці. *@
                            @: &nbsp;
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@* Перевірка, чи у моделі існують інші логіни (OtherLogins), і чи їхня кількість більше нуля. 
Якщо умова виконується, виводиться блок коду для відображення доступних сервісів для входу. *@
@if (Model.OtherLogins?.Count > 0)
{
    @* Заголовок, який показує, що на сторінці буде можливість додати ще один сервіс для входу. *@
    <h4>Add another service to log in.</h4>
    <hr />
    @* Форма для додавання нового сервісу для входу.asp - page - handler = "LinkLogin" 
    вказує на обробник додавання логіну. *@
    <form id="link-login-form" asp-page-handler="LinkLogin" method="post" class="form-horizontal">
        @* Контейнер для кнопок сервісів для входу. *@
        <div id="socialLoginList">
            <p>
                @* Цикл, який проходиться по кожному іншому сервісу для входу в колекції 
                OtherLogins у моделі. *@
                @foreach (var provider in Model.OtherLogins)
                {
                    @* Кнопка, яка представляє інший сервіс для входу. Вона має унікальний ідентифікатор 
                    id на основі імені постачальника, клас Bootstrap для стилізації, та інші атрибути, 
                    такі як name, value, і title. *@
                    <button id="@($"link-login-button-{provider.Name}")" type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                }
            </p>
        </div>
    </form>
}