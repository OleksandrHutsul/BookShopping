@* Цей файл сторінки реєстрації відображає форму для введення необхідних даних для реєстрації 
користувача та можливість обрати зовнішній сервіс для реєстрації. *@

@*  Ця директива вказує, що цей файл є сторінкою *@
@page
@*  Визначає тип моделі, яка використовується на цій сторінці. *@
@model RegisterModel
@{
    // Встановлює заголовок сторінки у ViewData.
    ViewData["Title"] = "Register";
}
@* Виводить заголовок сторінки у розділі HTML. Заголовок береться з ViewData, який був встановлений раніше. *@
<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        @* Форма для введення даних користувача для реєстрації. asp-route-returnUrl використовується 
        для передачі URL, на який користувач повернеться після успішної реєстрації. *@
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            @* Виводить повідомлення про помилки валідації. asp-validation-summary="ModelOnly" вказує 
            виводити тільки повідомлення про помилки для моделі (властивостей моделі). *@
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                @* Елемент введення для введення електронної пошти користувача. asp-for вказує, що 
                це поле пов'язано з властивістю Email об'єкта Input моделі. *@
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            @* Кнопка для відправлення форми реєстрації. *@
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    @* Цей блок коду розміщується у шостій колонці (md-6) сітки Bootstrap та 
    відцентровується відносно колонки зправа (md-offset-2). *@
    <div class="col-md-6 col-md-offset-2">
        @* Цей блок коду містить відомості про можливість реєстрації через зовнішні сервіси 
        (наприклад, Google, Facebook і т. д.). *@
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                /* Це умовна конструкція, яка перевіряє, чи існують зовнішні сервіси для реєстрації.
                Model.ExternalLogins містить інформацію про доступні зовнішні сервіси.Якщо сервісів немає, 
                виводиться відповідне повідомлення.*/
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else //Якщо є доступні зовнішні сервіси, генерується форма для вибору сервісу реєстрації.
                {
                    /*id="external-account": Вказує ідентифікатор форми.
                    asp-page="./ExternalLogin": Вказує URL, на який буде відправлено запит при виборі 
                    зовнішнього сервісу.
                    asp-route-returnUrl="@Model.ReturnUrl": Вказує URL, на який користувач повернеться 
                    після успішної реєстрації чи входу через зовнішній сервіс.
                    method="post": Вказує метод відправки форми (в даному випадку, POST).
                    class="form-horizontal": Додає клас для використання стилів Bootstrap для форми.*/
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                /*Для кожного зовнішнього сервісу генерується кнопка, яка містить ім'я 
                                 * та відображає текст з назвою сервісу. При натисканні на цю кнопку 
                                 * відбувається відправка форми з обраним зовнішнім сервісом для 
                                 * реєстрації чи входу.*/
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@* Ця секція дозволяє вбудовувати скрипти на сторінку. У даному випадку, вставляється частковий вид
_ValidationScriptsPartial, який містить необхідні скрипти для валідації форми. *@
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}