namespace BookShoppingCartMvcUI.Repositories
{
    public interface ICartRepository
    {
        //Метод, який додає товар до корзини покупок. Приймає ідентифікатор книги (bookId) та
        //кількість товару (qty). Повертає кількість елементів у корзині покупок після додавання товару.
        Task<int> AddItem(int bookId, int qty);
        //Метод, який видаляє товар з корзини покупок. Приймає ідентифікатор книги (bookId).
        //Повертає кількість елементів у корзині покупок після видалення товару.
        Task<int> RemoveItem(int bookId);
        //Метод, який отримує повну інформацію про корзину покупок поточного користувача.
        //Повертає об'єкт типу ShoppingCart.
        Task<ShoppingCart> GetUserCart();
        //Метод, який отримує кількість елементів у корзині покупок для вказаного користувача за
        //його ідентифікатором. Приймає опціональний параметр userId, який може бути порожнім рядком.
        //Повертає кількість елементів у корзині покупок.
        Task<int> GetCartItemCount(string userId = "");
        //Метод, який отримує інформацію про корзину покупок для вказаного користувача за його
        //ідентифікатором. Приймає ідентифікатор користувача (userId). Повертає об'єкт типу ShoppingCart.
        Task<ShoppingCart> GetCart(string userId);
        //Метод, який виконує процес оформлення замовлення та оформлення покупки. Повертає true,
        //якщо процес успішно завершено, і false у протилежному випадку.
        Task<bool> DoCheckout();
    }
}